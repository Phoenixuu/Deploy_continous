CI/CD pipeline :
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup Python environment
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install dependencies and run tests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: python -m unittest discover tests

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Login to DockerHub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and Push Docker Image
      run: |
        docker build -t <your-dockerhub-username>/ai-model:latest .
        docker push <your-dockerhub-username>/ai-model:latest

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Configure kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0'

    # Set up kubeconfig
    - name: Set up Kubeconfig
      run: echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/.kube/config

    # Apply Kubernetes manifests
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
